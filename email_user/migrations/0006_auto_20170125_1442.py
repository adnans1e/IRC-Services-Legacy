# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2017-01-25 14:42
from __future__ import unicode_literals

from django.db import migrations

from services.utils import permission_names_to_objects


SP_ADMIN_PERMISSIONS = [
    'services.add_service',
    'services.change_service',
    'services.delete_service'
]
SP_EDITOR_PERMISSIONS = [
    'services.add_service',
    'services.change_service',
    'services.delete_service'
]
GAS_ADMIN_PERMISSIONS = []
BALANCE_CHECKER_ADMIN_PERMISSIONS = []
ME_VIEWER_PERMISSIONS = []


def no_op(apps, schema_editor):
    pass


def create_groups(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')
    ContentType = apps.get_model('contenttypes', 'ContentType')

    group, unused = Group.objects.get_or_create(name='SP Admin')
    group.permissions.add(*permission_names_to_objects(SP_ADMIN_PERMISSIONS, Permission, ContentType))

    group, unused = Group.objects.get_or_create(name='SP Editor')
    group.permissions.add(*permission_names_to_objects(SP_EDITOR_PERMISSIONS, Permission, ContentType))

    group, unused = Group.objects.get_or_create(name='Gas Admin')
    group.permissions.add(*permission_names_to_objects(GAS_ADMIN_PERMISSIONS, Permission, ContentType))

    group, unused = Group.objects.get_or_create(name='Balance Checker Admin')
    group.permissions.add(*permission_names_to_objects(BALANCE_CHECKER_ADMIN_PERMISSIONS, Permission, ContentType))

    group, unused = Group.objects.get_or_create(name='M&E Viewer')
    group.permissions.add(*permission_names_to_objects(ME_VIEWER_PERMISSIONS, Permission, ContentType))

    try:
        ri_editor = Group.objects.get(name='Editors')
        ri_editor.name = 'RI Editor'
        ri_editor.save()
    except Group.DoesNotExist:
        pass


class Migration(migrations.Migration):

    dependencies = [
        ('email_user', '0005_auto_20160403_2243'),
    ]

    operations = [
        migrations.RunPython(
            code=create_groups,
            reverse_code=no_op,
            atomic=True
        ),
        migrations.RunPython(
            code=create_groups,
            reverse_code=no_op,
            atomic=True
        ),
    ]
