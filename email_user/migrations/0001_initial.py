# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2019-11-08 12:47
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import email_user.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        ('sites', '0002_alter_domain_unique'),
        ('regions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('surname', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(code='invalid_phone_number', message='Invalid phone number', regex='(^[\\d+](?!.*--)[\\d-]{7,18}[\\d])$')])),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('position', models.CharField(blank=True, max_length=100, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=email_user.models.get_upload_path)),
                ('google', models.CharField(blank=True, max_length=200, null=True)),
                ('facebook', models.CharField(blank=True, max_length=200, null=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('activation_key', models.CharField(default='', max_length=40, verbose_name='activation key')),
                ('language', models.CharField(blank=True, default='', help_text="User's preferred language.", max_length=10, verbose_name='language')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='regions.GeographicRegion')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='sites.Site')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'permissions': (('services_analytics', 'Can view Services Analytics'), ('content_analytics', 'Can view Content Analytics'), ('visitors_analytics', 'Can view Visitors Analytics'), ('mobile_app_analytics', 'Can view Mobile App Analytics'), ('social_media_analytics', 'Can view Social Media Analytics'), ('hotspots_analytics', 'Can view Hotspots Analytics'), ('balance_checker_analytics', 'Can view Balance Checker Analytics'), ('gas_search_tool_analytics', 'Can view Gas Search Tool Analytics'), ('unassigned_region_analytics', 'Can view Unassigned Region Analytics')),
            },
        ),
    ]
