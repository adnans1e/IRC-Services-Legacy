# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2017-01-30 13:22
from __future__ import unicode_literals

from django.db import migrations

from services.utils import permission_names_to_objects

PERMISSIONS = (
    ('RI Editor', [
        'email_user.services_analytics',
        'email_user.content_analytics',
        'email_user.visitors_analytics',
        'email_user.mobile_app_analytics',
        'email_user.social_media_analytics',
        'email_user.hotspots_analytics'
    ]),
    ('SP Admin', [
        'email_user.services_analytics',
        'email_user.content_analytics',
        'email_user.visitors_analytics',
        'email_user.mobile_app_analytics',
        'email_user.social_media_analytics'
    ]),
    ('SP Editor', [
        'email_user.services_analytics'
    ]),
    ('Gas Admin', [
        'email_user.gas_search_tool_analytics'
    ]),
    ('Balance Checker Admin', [
        'email_user.balance_checker_analytics'
    ]),
    ('M&E Viewer', [
        'email_user.services_analytics',
        'email_user.content_analytics',
        'email_user.visitors_analytics',
        'email_user.mobile_app_analytics',
        'email_user.social_media_analytics',
        'email_user.hotspots_analytics',
        'email_user.balance_checker_analytics',
        'email_user.gas_search_tool_analytics'
    ])
)


def no_op(apps, schema_editor):
    pass


def assign_permissions_to_groups(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')
    ContentType = apps.get_model('contenttypes', 'ContentType')

    for group_name, permission in PERMISSIONS:
        try:
            group = Group.objects.get(name=group_name)
            group.permissions.add(*permission_names_to_objects(permission, Permission, ContentType))
        except Group.DoesNotExist:
            pass


class Migration(migrations.Migration):
    dependencies = [
        ('email_user', '0010_auto_20170127_1435'),
    ]

    operations = [
        migrations.RunPython(
            code=assign_permissions_to_groups,
            reverse_code=no_op,
            atomic=True
        ),
        migrations.RunPython(
            code=assign_permissions_to_groups,
            reverse_code=no_op,
            atomic=True
        ),
    ]
